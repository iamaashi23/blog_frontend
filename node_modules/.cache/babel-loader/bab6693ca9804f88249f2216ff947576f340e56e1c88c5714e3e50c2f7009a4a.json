{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aashi\\\\OneDrive\\\\Desktop\\\\mern_blog\\\\client\\\\src\\\\pages\\\\RegisterPage.js\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RegisterPage() {\n  //   const [username, setUsername] = useState('');\n  //   const [password, setPassword] = useState('');\n  //   async function register(ev) {\n  //     ev.preventDefault();\n  //     const response = await fetch('http://localhost:4000/register', {\n  //       method: 'POST',\n  //       body: JSON.stringify({username,password}),\n  //       headers: {'Content-Type':'application/json'},\n  //     });\n  //     if (response.status === 200) {\n  //       alert('registration successful');\n  //     } else {\n  //       alert('registration failed');\n  //     }\n  //   }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"register\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"username\"\n      //  value={username}\n      //  onChange={ev => setUsername(ev.target.value)}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"password\"\n      //  value={password}\n      //  onChange={ev => setPassword(ev.target.value)}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c = RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","RegisterPage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/aashi/OneDrive/Desktop/mern_blog/client/src/pages/RegisterPage.js"],"sourcesContent":["import {useState} from \"react\";\r\n\r\nexport default function RegisterPage() {\r\n//   const [username, setUsername] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   async function register(ev) {\r\n//     ev.preventDefault();\r\n//     const response = await fetch('http://localhost:4000/register', {\r\n//       method: 'POST',\r\n//       body: JSON.stringify({username,password}),\r\n//       headers: {'Content-Type':'application/json'},\r\n//     });\r\n//     if (response.status === 200) {\r\n//       alert('registration successful');\r\n//     } else {\r\n//       alert('registration failed');\r\n//     }\r\n//   }\r\n  return (\r\n    <form className=\"register\" >\r\n      <h1>Register</h1>\r\n      <input type=\"text\"\r\n             placeholder=\"username\"\r\n            //  value={username}\r\n            //  onChange={ev => setUsername(ev.target.value)}\r\n            />\r\n      <input type=\"password\"\r\n             placeholder=\"password\"\r\n            //  value={password}\r\n            //  onChange={ev => setPassword(ev.target.value)}\r\n            />\r\n      <button>Register</button>\r\n    </form>\r\n  );\r\n}"],"mappings":";AAAA,SAAQA,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,eAAe,SAASC,YAAYA,CAAA,EAAG;EACvC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACE,oBACED,OAAA;IAAME,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACxBH,OAAA;MAAAG,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBP,OAAA;MAAOQ,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC;MACb;MACA;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACRP,OAAA;MAAOQ,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC;MACb;MACA;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACRP,OAAA;MAAAG,QAAA,EAAQ;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEX;AAACG,EAAA,GAhCuBT,YAAY;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}