{"ast":null,"code":"\"use strict\";\n\nexports.differenceInMinutes = differenceInMinutes;\nvar _index = require(\"./constants.js\");\nvar _index2 = require(\"./differenceInMilliseconds.js\");\nvar _index3 = require(\"./_lib/roundingMethods.js\");\n\n/**\n * The {@link differenceInMinutes} function options.\n */\n\n/**\n * @name differenceInMinutes\n * @category Minute Helpers\n * @summary Get the number of minutes between the given dates.\n *\n * @description\n * Get the signed number of full (rounded towards 0) minutes between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n * @param options - An object with options.\n *\n * @returns The number of minutes\n *\n * @example\n * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?\n * const result = differenceInMinutes(\n *   new Date(2014, 6, 2, 12, 20, 0),\n *   new Date(2014, 6, 2, 12, 7, 59)\n * )\n * //=> 12\n *\n * @example\n * // How many minutes are between 10:01:59 and 10:00:00\n * const result = differenceInMinutes(\n *   new Date(2000, 0, 1, 10, 0, 0),\n *   new Date(2000, 0, 1, 10, 1, 59)\n * )\n * //=> -1\n */\nfunction differenceInMinutes(dateLeft, dateRight, options) {\n  const diff = (0, _index2.differenceInMilliseconds)(dateLeft, dateRight) / _index.millisecondsInMinute;\n  return (0, _index3.getRoundingMethod)(options?.roundingMethod)(diff);\n}","map":{"version":3,"names":["exports","differenceInMinutes","_index","require","_index2","_index3","dateLeft","dateRight","options","diff","differenceInMilliseconds","millisecondsInMinute","getRoundingMethod","roundingMethod"],"sources":["C:/Users/aashi/OneDrive/Desktop/mern_blog/client/node_modules/date-fns/differenceInMinutes.js"],"sourcesContent":["\"use strict\";\nexports.differenceInMinutes = differenceInMinutes;\nvar _index = require(\"./constants.js\");\nvar _index2 = require(\"./differenceInMilliseconds.js\");\n\nvar _index3 = require(\"./_lib/roundingMethods.js\");\n\n/**\n * The {@link differenceInMinutes} function options.\n */\n\n/**\n * @name differenceInMinutes\n * @category Minute Helpers\n * @summary Get the number of minutes between the given dates.\n *\n * @description\n * Get the signed number of full (rounded towards 0) minutes between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n * @param options - An object with options.\n *\n * @returns The number of minutes\n *\n * @example\n * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?\n * const result = differenceInMinutes(\n *   new Date(2014, 6, 2, 12, 20, 0),\n *   new Date(2014, 6, 2, 12, 7, 59)\n * )\n * //=> 12\n *\n * @example\n * // How many minutes are between 10:01:59 and 10:00:00\n * const result = differenceInMinutes(\n *   new Date(2000, 0, 1, 10, 0, 0),\n *   new Date(2000, 0, 1, 10, 1, 59)\n * )\n * //=> -1\n */\nfunction differenceInMinutes(dateLeft, dateRight, options) {\n  const diff =\n    (0, _index2.differenceInMilliseconds)(dateLeft, dateRight) /\n    _index.millisecondsInMinute;\n  return (0, _index3.getRoundingMethod)(options?.roundingMethod)(diff);\n}\n"],"mappings":"AAAA,YAAY;;AACZA,OAAO,CAACC,mBAAmB,GAAGA,mBAAmB;AACjD,IAAIC,MAAM,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AACtC,IAAIC,OAAO,GAAGD,OAAO,CAAC,+BAA+B,CAAC;AAEtD,IAAIE,OAAO,GAAGF,OAAO,CAAC,2BAA2B,CAAC;;AAElD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,mBAAmBA,CAACK,QAAQ,EAAEC,SAAS,EAAEC,OAAO,EAAE;EACzD,MAAMC,IAAI,GACR,CAAC,CAAC,EAAEL,OAAO,CAACM,wBAAwB,EAAEJ,QAAQ,EAAEC,SAAS,CAAC,GAC1DL,MAAM,CAACS,oBAAoB;EAC7B,OAAO,CAAC,CAAC,EAAEN,OAAO,CAACO,iBAAiB,EAAEJ,OAAO,EAAEK,cAAc,CAAC,CAACJ,IAAI,CAAC;AACtE"},"metadata":{},"sourceType":"script","externalDependencies":[]}